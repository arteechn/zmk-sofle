#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    scroll_keypress: scroll_keypress {
        compatible = "zmk,behavior-sensor-rotate-var";
        label = "SCROLL_KEYPRESS";
        #sensor-binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };

    combos {
        compatible = "zmk,combos";

        return {
            bindings = <&kp RETURN>;
            key-positions = <34 35 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp RCTRL         &trans     &kp LA(LC(DELETE))  &trans        &kp LS(LCTRL)  &kp LA(F4)    &kp UP_ARROW     &kp LS(LC(ESCAPE))  &kp LG(LS(S))  &kp LA(TAB)     &kp LC(T)     &kp LC(W)         &kp LC(TAB)
&kp ESC           &kp Q      &kp W               &kp E         &kp R          &kp T         &kp DOWN_ARROW   &kp Y               &kp U          &kp I           &kp O         &kp P             &kp RC(BACKSPACE)
&kp TAB           &kp A      &kp S               &kp D         &kp F          &kp G         &kp LEFT_ARROW   &kp H               &kp J          &kp K           &kp L         &kp SEMI          &kp APOS
&kp RSHFT         &kp Z      &kp X               &kp C         &kp V          &kp B         &kp RIGHT_ARROW  &kp N               &kp M          &kp COMMA       &kp DOT       &kp FSLH          &kp RA(N)
&kp C_PLAY_PAUSE  &kp LCTRL  &kp RGUI            &kp LEFT_ALT  &mo 1          &kp SPACE     &mkp MCLK        &kp BACKSPACE       &mo 2          &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_CONTROL
            >;

            sensor-bindings = <&scroll_keypress LC(RIGHT) LC(LEFT)>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &trans     &trans          &trans          &trans           &trans       &mmv MOVE_UP     &trans     &trans     &trans      &trans         &trans    &trans
&trans      &trans     &trans          &kp UP_ARROW    &trans           &trans       &mmv MOVE_DOWN   &trans     &trans     &trans      &trans         &trans    &trans
&trans      &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mkp MCLK    &mmv MOVE_LEFT   &kp PG_UP  &kp PG_DN  &trans      &kp BACKSLASH  &kp PIPE  &trans
&trans      &kp LC(Z)  &trans          &kp LC(C)       &kp LC(V)        &trans       &mmv MOVE_RIGHT  &kp HOME   &kp END    &trans      &trans         &trans    &trans
&kp C_MUTE  &trans     &trans          &trans          &trans           &trans       &mkp LCLK        &trans     &trans     &kp DELETE  &trans         &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_3 {
            bindings = <
&trans     &trans           &trans        &trans        &trans        &trans         &mmv MOVE_UP     &trans                &trans                 &trans          &trans            &trans        &trans
&trans     &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &mmv MOVE_DOWN   &kp NUMBER_6          &kp N7                 &kp N8          &kp N9            &kp N0        &trans
&trans     &kp TILDE        &kp MINUS     &kp EQUAL     &kp ASTERISK  &kp CARET      &mmv MOVE_LEFT   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp COLON     &kp DOUBLE_QUOTES
&kp GRAVE  &kp EXCLAMATION  &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT    &mmv MOVE_RIGHT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN   &kp GREATER_THAN  &kp QUESTION  &kp AMPERSAND
&trans     &trans           &trans        &trans        &trans        &trans         &mkp LCLK        &trans                &trans                 &trans          &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans      &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                       &mmv MOVE_UP     &trans  &trans  &trans  &trans   &trans       &trans
&trans      &bt BT_CLR    &bt BT_CLR_ALL  &out OUT_TOG  &trans        &rgb_ug RGB_TOG                    &mmv MOVE_DOWN   &kp F1  &kp F2  &kp F3  &kp F4   &kp F5       &kp F6
&trans      &out OUT_USB  &out OUT_BLE    &trans        &trans        &rgb_ug RGB_EFF                    &mmv MOVE_LEFT   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11      &kp F12
&sys_reset  &bootloader   &trans          &trans        &trans        &rgb_ug RGB_COLOR_HSB(54,68,76)    &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans   &bootloader  &sys_reset
&trans      &trans        &trans          &trans        &trans        &trans                             &mkp LCLK        &trans  &trans  &trans  &trans   &trans
            >;

            sensor-bindings = <&scroll_keypress LC(RIGHT) LC(LEFT)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
