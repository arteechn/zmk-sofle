#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    scroll_keypress: scroll_keypress {
        compatible = "zmk,behavior-sensor-rotate-var";
        label = "SCROLL_KEYPRESS";
        #sensor-binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC            &kp N1        &kp N2  &kp N3         &kp N4     &kp N5        &kp UP_ARROW     &kp N6            &kp N7     &kp N8         &kp N9          &kp N0    &tog 3
&kp TAB            &kp Q         &kp W   &kp E          &kp R      &kp T         &kp DOWN_ARROW   &kp Y             &kp U      &kp I          &kp O           &kp P     &kp BSLH
&kp RMETA          &kp A         &kp S   &kp D          &kp F      &kp G         &kp LEFT_ARROW   &kp H             &kp J      &kp K          &kp L           &kp SEMI  &kp APOS
&kp RIGHT_CONTROL  &kp Z         &kp X   &kp C          &kp V      &kp B         &kp RIGHT_ARROW  &kp N             &kp M      &kp COMMA      &kp DOT         &kp FSLH  &kp RA(N)
&kp C_PLAY_PAUSE   &kp LEFT_ALT  &mo 1   &kp BACKSPACE  &kp SPACE  &kp RETURN    &kp LS(LG(S))    &kp LEFT_CONTROL  &kp SPACE  &kp BACKSPACE  &kp LEFT_SHIFT  &mo 2
            >;

            sensor-bindings = <&scroll_keypress RIGHT LEFT>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp EXCL       &kp AT         &kp HASH   &kp DOLLAR  &kp PERCENT    &mmv MOVE_UP     &kp CARET  &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans      &trans         &mkp LCLK      &mkp MCLK  &mkp RCLK   &mkp MB4       &mmv MOVE_DOWN   &kp PG_UP  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans      &kp TILDE      &kp MINUS      &kp EQUAL  &trans      &mkp MB5       &mmv MOVE_LEFT   &kp PG_DN  &kp LESS_THAN     &kp GREATER_THAN   &kp HOME              &trans                 &trans
&trans      &kp LS(LC(C))  &kp LS(LC(V))  &kp LC(C)  &kp LC(V)   &trans         &mmv MOVE_RIGHT  &trans     &trans            &trans             &kp END               &trans                 &trans
&kp C_MUTE  &trans         &trans         &trans     &trans      &trans         &mkp LCLK        &trans     &trans            &trans             &trans                &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&trans      &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &mmv MOVE_UP     &kp F1  &kp F2          &kp F3          &kp F4           &kp F5       &kp F6
&trans      &bt BT_CLR    &bt BT_CLR_ALL  &out OUT_TOG  &trans        &rgb_ug RGB_TOG                      &mmv MOVE_DOWN   &kp F7  &kp F8          &kp F9          &kp F10          &kp F11      &kp F12
&trans      &out OUT_USB  &out OUT_BLE    &trans        &trans        &rgb_ug RGB_EFF                      &mmv MOVE_LEFT   &trans  &trans          &kp UP_ARROW    &trans           &trans       &trans
&sys_reset  &bootloader   &trans          &trans        &trans        &rgb_ug RGB_COLOR_HSB(165,100,41)    &mmv MOVE_RIGHT  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &bootloader  &sys_reset
&trans      &trans        &trans          &trans        &trans        &trans                               &mkp LCLK        &trans  &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&scroll_keypress LC(RIGHT) LC(LEFT)>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp N0  &trans
            >;
        };
    };
};
